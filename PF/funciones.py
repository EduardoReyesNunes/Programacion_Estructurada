import os
from openpyxl import Workbook
from openpyxl.styles import Font, Alignment
import datetime

def borrarPantalla():
  os.system("cls")

def esperarTecla():
  input("\n\t\t ... ‚ö†Ô∏è  Presione enter para continuar ‚ö†Ô∏è ...")

def menu_usurios():
   print("\n \t‚òïüç∞ .:: Delicias and cofee¬Æ ::. üç∞‚òï\n\n\t\tüìù 1.-  Registro  \n\t\tüìÇ 2.-  Login \n\t\t‚≠ï 3.- Salir ")
   opcion=input("\n\tüëâ Elige una opci√≥n: ").upper().strip() 
   return opcion

def admin():
   print("\n\t1Ô∏è‚É£  Agregar producto \n\t2Ô∏è‚É£  Agregar vendedor \n\t3Ô∏è‚É£  Mostrar productos \n\t4Ô∏è‚É£  Mostar vendedor \n\t5Ô∏è‚É£  Modificar producto \n\t6Ô∏è‚É£  Modificar vendedor \n\t7Ô∏è‚É£  Eliminar producto \n\t8Ô∏è‚É£  Eliminar vendedor \n\t9Ô∏è‚É£  Mostrar ventas por vendedor \n\tüîü SALIR ")
   opcion = input("\n\tüëâ Elige una opci√≥n: ").upper().strip()
   return opcion 

def vendedor():
   borrarPantalla()
   print("\n\tüìÑ .::  Men√∫ Vendedor ::. üìÑ\n\n\t1Ô∏è‚É£  Crear venta \n\t2Ô∏è‚É£  Mostrar ventas \n\t3Ô∏è‚É£  Modificar \n\t4Ô∏è‚É£  Eliminar \n\t5Ô∏è‚É£  Salir ")
   opcion = input("\n\tüëâ Elige una opci√≥n: ").upper().strip()
   return opcion 

def exportar_a_excel(nombre_archivo, datos, columnas, titulo):
    try:
        wb = Workbook()
        ws = wb.active
        ws.title = titulo

        # Estilo para el encabezado
        bold_font = Font(bold=True)
        center_alignment = Alignment(horizontal="center")

        # Escribir encabezados
        for col_num, columna in enumerate(columnas, 1):
            celda = ws.cell(row=1, column=col_num, value=columna)
            celda.font = bold_font
            celda.alignment = center_alignment

        # Escribir datos
        for row_num, fila in enumerate(datos, 2):
            for col_num, valor in enumerate(fila, 1):
                ws.cell(row=row_num, column=col_num, value=valor)

        # Ajustar ancho de columnas
        for col in ws.columns:
            max_length = 0
            for cell in col:
                try:
                    if len(str(cell.value)) > max_length:
                        max_length = len(cell.value)
                except:
                    pass
            adjusted_width = (max_length + 2)
            ws.column_dimensions[col[0].column_letter].width = adjusted_width

        # Guardar archivo
        fecha_actual = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
        nombre_final = f"{nombre_archivo}_{fecha_actual}.xlsx"
        wb.save(nombre_final)
        print(f"\n\t‚úÖ ¬°Archivo '{nombre_final}' generado con √©xito! ‚úÖ")
        return True
    
    except Exception as e:
        print(f"\n\t‚ùå Error al exportar a Excel: {e} ‚ùå")
        return False